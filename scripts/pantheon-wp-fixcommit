#
# Presuming that we have a WordPress site that has already been updated
# through the WordPress admin site and committed through the dashboard,
# this script will fix up the commits to get rid of the "initial commit"
# so that we can just push this back up to the upstream repository,
# pantheon-systems/WordPress.
#
# Instructions:
#
#   1. Log in to Pantheon CUSTOMER account.  DO NOT use employee account.
#   2. Create a new site; name it something like “WordPress [NEW VERSION]”.
#   3. Clone the site locally using the git connection info.
#   4. Go to the updates page and click on “update”
#       - Is WordPress asking for ftp credentials?  Make sure you are in
#         SFTP mode with a customer account; don’t use the employee account!
#       - Once you update, WP will show you a page about the update.
#         This is a lie; it has already done the update.
#   5. DO NOT update themes or plugins!  Leave these orphaned.  Users
#       are now responsible to update these themselves, if they are using them.
#   6. Go back to your dashboard and commit the changes from the update
#
# Then run this script.
#
WP_SITE="$1"
WP_ENV="${2-dev}"

echo "Fix up $WP_SITE"

# If we are not working in a .git repository, then clone the named project
if [ ! -d .git ]
then
    PUUID=$(terminus site info --site="$WP_SITE" --field=id 2>/dev/null)
    if [ -z "$PUUID" ]
    then
        echo "Could not get UUID for $WP_SITE"
        exit 1
    fi
    REPO="ssh://codeserver.dev.$PUUID@codeserver.dev.$PUUID.drush.in:2222/~/repository.git"
    BRANCH=master

    git clone --branch "$BRANCH" "$REPO" "$WP_SITE"
    cd "$WP_SITE"
fi

terminus wp --site="$WP_SITE" --env="$WP_ENV" "core verify-checksums"
if [ 0 != $? ] ; then
    echo "wp-cli core verify-checksums reported a failure; please fix this."
    exit 1
fi

WP_VERSION=$(terminus wp --site="$WP_SITE" --env="$WP_ENV" "core version" | tail -n 1)

echo "Version is $WP_VERSION"

git checkout master
git pull origin master

logmsg=$(git log -1 --pretty=format:"%s")

echo "Last log message is $logmsg"

if [ -z "$(echo $logmsg | grep '^Update to')" ] ; then
    echo "This script presumes that you updated WordPress through the admin UI, and committed a change through the Dashboard.  The commit comment should begin with 'Update to', but it does not."
    exit 1
fi

if [ -z "$(echo $logmsg | grep $WP_VERSION)" ] ; then
    echo "The log message should contain '$WP_VERSION'."
    exit 1
fi

echo "Making the last commit be authored by Pantheon Automation"
git commit --amend --author="Pantheon Automation <bot@getpantheon.com>"

BRANCH="wp$WP_VERSION"

# If the previous commit is "Initial Commit", then get rid of it.
prevlogmsg=$(git log -1 --pretty=format:"%s" HEAD~)
if [ -n "$(echo $logmsg | grep $WP_VERSION)" ] ; then
    echo "Removing the 'Initial Commit' message."

    git checkout -b "$BRANCH" HEAD~2
    git cherry-pick master
    git checkout master
    git reset --hard HEAD^^
    git merge "$BRANCH"
else
    git checkout -b "$BRANCH"
    git checkout -
fi

echo "Adding a new upstream remote"
git remote add upstream git@github.com:pantheon-systems/WordPress.git

echo "All done with update.  To deploy, make sure things look okay and then run:"
echo git push upstream "$BRANCH"
