#!/usr/bin/env php
<?php

$options = getopt(
  "dv",
  [
    'name:',
    'project:',
    'version:',
  ]
);

$project_name = $options['name'];
$project = $options['project'];
$version = $options['version'];

$token = getenv('GITHUB_TOKEN');

$documentation_project = 'pantheon-systems/documentation';

function find_changelog_issue($project)
{
  // Get all of the open issues in pantheon-systems/documentation
  exec("curl 'https://api.github.com/repos/$project/issues?state=open'", $issue_json, $status);
  $issues = json_decode(implode("\n", $issue_json), true);
  $regex = changelog_regex();

  foreach ($issues as $issue) {
    // Search for a title along the lines of
    // 'November/December changelog'
    if (preg_match($regex, $issue['title'])) {
      return $issue;
    }
  }
}

function changelog_regex()
{
  $months = [
    '', 'jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec', 'jan',
  ];
  $index = (int)date('m');

  $start_month = $months[$index];
  $next_month = $months[$index+1];

  return "#^${start_month}[a-z]* */${next_month}[a-z]* changelog#i";
}

function find_pull_request($project, $version)
{
  // Get all of the open issues in pantheon-systems/documentation
  exec("curl 'https://api.github.com/repos/$project/pulls?head=update-$version'", $pr_json, $status);
  $prs = json_decode(implode("\n", $pr_json), true);
  $pr = reset($prs);
  return $pr;
}

function add_changelog_comment($project, $number, $comment, $token)
{
  print "Adding comment to $project issue #$number:\n$comment\n";
  print("curl -d '{ \"body\": \"$comment\" }' -X POST https://api.github.com/repos/$project/issues/$number/comments?access_token=$token");
  exec("curl -d '{ \"body\": \"$comment\" }' -X POST https://api.github.com/repos/$project/issues/$number/comments?access_token=$token", $output, $status);
}

$changelog_issue = find_changelog_issue($documentation_project);
if (empty($changelog_issue)) {
  print "Could not find changelog issue\n";
  exit(1);
}
$changelog_url = $changelog_issue['url'];
$changelog_issue_number = $changelog_issue['number'];

$commit_message = "$project_name $version";

$pr = find_pull_request($project, $version);
if (!empty($pr)) {
  $pr_url = $pr['html_url'];
  $commit_message .= ": $pr_url";
}

add_changelog_comment($documentation_project, $changelog_issue_number, $commit_message, $token);
